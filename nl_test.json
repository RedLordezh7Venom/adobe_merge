
[
    {
      "NL": "Find the average time spent on the website by users who clicked on a push notification and completed a survey.",
      "Query": "SELECT AVG(time_spent_seconds) FROM events WHERE push_notification_clicked = true AND survey_completed = true;"
    },
    {
      "NL": "Get the count of wishlist items for each user and sort them in descending order.",
      "Query": "SELECT fk_user_id, COUNT(*) as wishlist_count FROM wishlist GROUP BY fk_user_id ORDER BY wishlist_count DESC"
    },
    {
      "NL": "Find the products in the cart that have a promotional discounted price less than $50, along with the customer's loyalty program tier level and the customer's accumulated loyalty points balance.",
      "Query": "SELECT T1.product_display_name, T3.accumulated_loyalty_points_balance, T3.loyalty_program_tier_level FROM products AS T1 INNER JOIN cart AS T2 ON T1.unique_product_identifier = T2.fk_product_id INNER JOIN customers_loyalty_program AS T3 ON T2.fk_user_id = T3.associated_customer_reference_id WHERE T1.promotional_discounted_price < 50"
    },
    {
      "NL": "What is the total discount amount redeemed by customers who have participated in exclusive beta testing and have a loyalty membership unique identifier greater than 1000?",
      "Query": "SELECT SUM(total_discount_amount_redeemed) FROM customers_loyalty_program WHERE participation_in_exclusive_beta_testing = TRUE AND loyalty_membership_unique_identifier > 1000"
    },
    {
      "NL": "Retrieve the total amount of all orders that contain products from the cart of user with ID 123 and have a shipping date after January 1, 2023.",
      "Query": "SELECT SUM(o.total_amount) FROM orders o JOIN cart c ON o.person_customer_id = c.fk_user_id WHERE c.fk_user_id = 123 AND o.shipping_date > '2023-01-01'"
    },
    {
      "NL": "What are the campaign names of the campaigns that have generated more than $1000 in revenue and have a cost per acquisition of less than $10?",
      "Query": "SELECT campaign_name FROM campaigns WHERE revenue_generated > 1000 AND cost_per_acquisition < 10"
    },
    {
      "NL": "Show the average rating of reviews submitted by customers who are verified and have active subscriptions, and the number of helpful votes they received.",
      "Query": "SELECT AVG(T2.submitted_review_star_rating), AVG(T2.number_of_helpful_votes_received) FROM customerinfo AS T1 INNER JOIN product_reviews_and_ratings AS T2 ON T1.person_customer_id = T2.reviewing_customer_identifier WHERE T1.account_has_active_subscription = TRUE AND T2.verification_status_of_reviewer = TRUE"
    },
    {
      "NL": "Find the product name and average review rating for products with more than 100 reviews",
      "Query": "SELECT p.product_display_name, AVG(prar.submitted_review_star_rating) FROM products p JOIN product_reviews_and_ratings prar ON p.unique_product_identifier = prar.referenced_product_identifier GROUP BY p.product_display_name HAVING COUNT(prar.review_unique_identifier) > 100"
    },
    {
      "NL": "Find the total number of orders placed by premium customers who have purchased products with an average supplier rating greater than 4 and have a total number of verified reviews greater than 1000, along with the total amount spent by these customers, the average rating given by them, and the total number of helpful votes received by their reviews.",
      "Query": "SELECT COUNT(DISTINCT o.order_id), SUM(o.total_amount), AVG(prar.submitted_review_star_rating), SUM(prar.number_of_helpful_votes_received) FROM orders o JOIN customerinfo c ON o.person_customer_id = c.person_customer_id JOIN product_reviews_and_ratings prar ON prar.referenced_product_identifier = (SELECT p.unique_product_identifier FROM products p JOIN suppliers s ON p.associated_supplier_reference_id = s.supplier_unique_identifier WHERE s.average_supplier_rating > 4 AND p.total_number_of_verified_reviews > 1000) WHERE c.person_is_premium = TRUE"
    },
    {
      "NL": "List the orders with a discount applied greater than 10% in any currency.",
      "Query": "SELECT order_id, discount_applied, total_amount, created_at FROM orders WHERE discount_applied > 0.1 * total_amount;"
    },
    {
      "NL": "Find the total number of products and the total price for each cart associated with a specific user.",
      "Query": "SELECT COUNT(*) AS total_number_of_products, SUM(total_price) AS total_price FROM cart GROUP BY fk_user_id;"
    },
    {
      "NL": "List all items in the wishlist where the expected purchase date is within the next 30 days and the priority level is 'high'.",
      "Query": "SELECT * FROM wishlist WHERE expected_purchase_date <= CURRENT_DATE + INTERVAL '30 days' AND priority_level = 'high';"
    },
    {
      "NL": "Find the total number of products supplied by each supplier, along with the average supplier rating and the number of inventories associated with each supplier, ordered by the total number of products supplied in descending order.",
      "Query": "SELECT supplier_unique_identifier, total_number_of_products_supplied, average_supplier_rating, COUNT(inventory.id) AS inventory_count FROM suppliers LEFT JOIN inventory ON suppliers.supplier_unique_identifier = inventory.supplier_id GROUP BY supplier_unique_identifier, total_number_of_products_supplied, average_supplier_rating ORDER BY total_number_of_products_supplied DESC;"
    },
    {
      "NL": "Retrieve the total time spent and the average scroll depth percentage for events where the event type is 'purchase' and the device platform is 'mobile'.",
      "Query": "SELECT SUM(time_spent_seconds) AS total_time_spent, AVG(scroll_depth_percentage) AS average_scroll_depth FROM events WHERE event_type = 'purchase' AND device_platform = 'mobile';"
    },
    {
      "NL": "Find all reviews of products that have been purchased more than 5 times, with the customer's review submission date and the total number of helpful votes received.",
      "Query": "SELECT T1.customer_review_submission_date, T1.number_of_helpful_votes_received FROM product_reviews_and_ratings AS T1 INNER JOIN transactions_and_payments AS T2 ON T1.referenced_product_identifier = T2.linked_order_reference_identifier WHERE T1.previous_product_purchases_count > 5"
    },
    {
      "NL": "Find the estimated delivery date and shipping cost for orders where the event type is 'order_placed' and the shipping status is 'shipped'.",
      "Query": "SELECT s.estimated_delivery, s.shipping_cost FROM shipping s JOIN events e ON s.fk_order_id = e.order_id WHERE e.event_type = 'order_placed' AND s.shipping_status = 'shipped';"
    },
    {
      "NL": "Analyze the total number of clicks and the average time spent by customers from the United States who visited product pages of 'Electronics' category products and view those who spent the most time on the site, including product names and their respective suppliers.",
      "Query": "SELECT p.product_display_name, s.official_supplier_business_name, SUM(e.click_count) AS total_clicks, AVG(e.time_spent_seconds) AS average_time_spent FROM events e JOIN products p ON e.order_item_id = p.unique_product_identifier JOIN suppliers s ON p.associated_supplier_reference_id = s.supplier_unique_identifier WHERE e.location_country = 'United States' AND p.product_category_primary = 'Electronics' GROUP BY p.product_display_name, s.official_supplier_business_name ORDER BY average_time_spent DESC;"
    },
    {
      "NL": "List all the campaigns with their corresponding campaign status, start date, end date and total revenue generated, and also list the total quantity of products in the cart for each campaign",
      "Query": "SELECT c.campaign_name, c.campaign_status, c.start_date, c.end_date, c.revenue_generated, SUM(ct.quantity) AS total_quantity FROM campaigns c LEFT JOIN cart ct ON c.campaign_id = ct.fk_product_id GROUP BY c.campaign_name, c.campaign_status, c.start_date, c.end_date, c.revenue_generated"
    }
  ]